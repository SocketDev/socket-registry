name: ‚öôÔ∏è CI Pipeline

# Comprehensive CI orchestrator that runs lint, type checks, and tests.
# Orchestrates multiple quality checks in parallel for efficient CI execution.
#
# Dependencies:
#   - SocketDev/socket-registry/.github/workflows/lint.yml
#   - SocketDev/socket-registry/.github/workflows/types.yml
#   - SocketDev/socket-registry/.github/workflows/test.yml
#   - SocketDev/socket-registry/.github/actions/setup-and-install
#   - actions/checkout@v5.0.0

on:
  workflow_call:
    inputs:
      debug:
        description: 'Enable debug output (e.g., "1" for verbose logging)'
        required: false
        type: string
        default: '0'
      fail-fast:
        description: 'Cancel all matrix jobs if one fails'
        required: false
        type: boolean
        default: false
      lint-node-version:
        description: 'Node.js version for linting'
        required: false
        type: string
        default: '22'
      lint-script:
        description: 'Lint command (e.g., "pnpm run lint-ci")'
        required: false
        type: string
        default: 'pnpm run lint-ci'
      lint-setup-script:
        description: 'Setup script before linting'
        required: false
        type: string
        default: ''
      lint-timeout-minutes:
        description: 'Timeout for lint job in minutes'
        required: false
        type: number
        default: 10
      max-parallel:
        description: 'Maximum parallel test jobs'
        required: false
        type: number
        default: 4
      node-versions:
        description: 'Node.js versions for testing (e.g., ''[20, 22, 24]'')'
        required: false
        type: string
        default: '[20, 22, 24]'
      os-versions:
        description: 'Operating systems for testing (e.g., ''["ubuntu-latest", "windows-latest"]'')'
        required: false
        type: string
        default: '["ubuntu-latest", "windows-latest"]'
      retention-days:
        description: 'Days to retain artifacts'
        required: false
        type: number
        default: 7
      run-lint:
        description: 'Include lint check job'
        required: false
        type: boolean
        default: true
      run-test:
        description: 'Include test matrix job'
        required: false
        type: boolean
        default: true
      run-type-check:
        description: 'Include type check job'
        required: false
        type: boolean
        default: true
      test-script:
        description: 'Test command (e.g., "pnpm run test-ci")'
        required: false
        type: string
        default: 'pnpm run test-ci'
      test-setup-script:
        description: 'Setup script before tests (e.g., "pnpm run build")'
        required: false
        type: string
        default: ''
      test-timeout-minutes:
        description: 'Timeout for test jobs in minutes'
        required: false
        type: number
        default: 15
      type-check-node-version:
        description: 'Node.js version for type checking'
        required: false
        type: string
        default: '22'
      type-check-script:
        description: 'Type check command (e.g., "pnpm run type-ci")'
        required: false
        type: string
        default: 'pnpm run type-ci'
      type-check-setup-script:
        description: 'Setup script before type checking'
        required: false
        type: string
        default: ''
      type-check-timeout-minutes:
        description: 'Timeout for type check job in minutes'
        required: false
        type: number
        default: 10
      working-directory:
        description: 'Working directory (e.g., "packages/core" for monorepos)'
        required: false
        type: string
        default: '.'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    if: inputs.run-lint
    name: üßπ Lint Check
    uses: SocketDev/socket-registry/.github/workflows/lint.yml@a912e5bd8ec469d2ee13abf592a6b2e5898c006c # main
    with:
      debug: ${{ inputs.debug }}
      lint-script: ${{ inputs.lint-script }}
      node-version: ${{ inputs.lint-node-version }}
      setup-script: ${{ inputs.lint-setup-script }}
      timeout-minutes: ${{ inputs.lint-timeout-minutes }}
      working-directory: ${{ inputs.working-directory }}

  type-check:
    if: inputs.run-type-check
    name: üîç Type Check
    uses: SocketDev/socket-registry/.github/workflows/types.yml@a912e5bd8ec469d2ee13abf592a6b2e5898c006c # main
    with:
      debug: ${{ inputs.debug }}
      node-version: ${{ inputs.type-check-node-version }}
      setup-script: ${{ inputs.type-check-setup-script }}
      timeout-minutes: ${{ inputs.type-check-timeout-minutes }}
      type-script: ${{ inputs.type-check-script }}
      working-directory: ${{ inputs.working-directory }}

  test:
    if: inputs.run-test
    name: üß™ Test Matrix
    uses: SocketDev/socket-registry/.github/workflows/test.yml@a912e5bd8ec469d2ee13abf592a6b2e5898c006c # main
    with:
      debug: ${{ inputs.debug }}
      fail-fast: ${{ inputs.fail-fast }}
      max-parallel: ${{ inputs.max-parallel }}
      node-versions: ${{ inputs.node-versions }}
      os-versions: ${{ inputs.os-versions }}
      setup-script: ${{ inputs.test-setup-script }}
      test-script: ${{ inputs.test-script }}
      timeout-minutes: ${{ inputs.test-timeout-minutes }}
      working-directory: ${{ inputs.working-directory }}

  ci-summary:
    name: ‚úÖ CI Summary
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    if: always()
    steps:
      - name: Check all jobs passed
        run: |
          # Check each job that was actually run.
          failed=0

          if [ "${{ inputs.run-lint }}" == "true" ] && [ "${{ needs.lint.result }}" != "success" ] && [ "${{ needs.lint.result }}" != "skipped" ]; then
            echo "‚ùå Lint check failed"
            failed=1
          fi

          if [ "${{ inputs.run-type-check }}" == "true" ] && [ "${{ needs.type-check.result }}" != "success" ] && [ "${{ needs.type-check.result }}" != "skipped" ]; then
            echo "‚ùå Type check failed"
            failed=1
          fi

          if [ "${{ inputs.run-test }}" == "true" ] && [ "${{ needs.test.result }}" != "success" ] && [ "${{ needs.test.result }}" != "skipped" ]; then
            echo "‚ùå Tests failed"
            failed=1
          fi

          if [ $failed -eq 1 ]; then
            echo "‚ùå CI Pipeline Failed"
            exit 1
          else
            echo "‚úÖ CI Pipeline Passed"
          fi

