name: âš¡ Provenance

on:
  workflow_call:
    inputs:
      access-script:
        description: 'NPM script to run for access control'
        required: false
        type: string
        default: ''
      debug:
        description: 'Enable debug output'
        required: false
        type: string
        default: '0'
      node-version:
        description: 'Node version to use'
        required: false
        type: string
        default: '22'
      package-name:
        description: 'Package name (e.g., @socketregistry/sdk) - used when scripts are not provided'
        required: false
        type: string
        default: ''
      publish-script:
        description: 'NPM script to run for publishing'
        required: false
        type: string
        default: ''
      registry-url:
        description: 'NPM registry URL'
        required: false
        type: string
        default: 'https://registry.npmjs.org'
      scope:
        description: 'NPM registry scope for package authentication'
        required: false
        type: string
        default: ''
      timeout-minutes:
        description: 'Timeout in minutes'
        required: false
        type: number
        default: 10
    secrets:
      npm_token:
        required: true

permissions:
  contents: read
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false  # Don't cancel publishing

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Validate inputs
        run: |
          if ([ -z "${{ inputs.publish-script }}" ] || [ -z "${{ inputs.access-script }}" ]) && [ -z "${{ inputs.package-name }}" ]; then
            echo "Error: package-name is required when publish-script or access-script is not provided"
            exit 1
          fi

      - uses: SocketDev/socket-registry/.github/actions/setup-and-install@main
        with:
          node-version: ${{ inputs.node-version }}
          debug: ${{ inputs.debug }}

      - uses: SocketDev/socket-registry/.github/actions/setup@main
        with:
          node-version: ${{ inputs.node-version }}
          scope: ${{ inputs.scope }}
          registry-url: ${{ inputs.registry-url }}
      - run: pnpm config set //registry.npmjs.org/:_authToken ${{ secrets.npm_token }}
      - run: pnpm run ${{ inputs.publish-script }}
        if: inputs.publish-script != ''
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
      - run: pnpm publish --provenance --access public --no-git-checks
        if: inputs.publish-script == '' && inputs.package-name != ''
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
      - run: pnpm run ${{ inputs.access-script }}
        if: inputs.access-script != ''
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
      - run: pnpm access set mfa=automation ${{ inputs.package-name }}
        if: inputs.access-script == '' && inputs.package-name != ''
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
