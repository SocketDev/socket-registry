{
  "name": "@socketregistry/monorepo",
  "version": "1.0.0",
  "private": true,
  "description": "Monorepo for Socket.dev optimized package overrides",
  "homepage": "http://github.com/SocketDev/socket-registry",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SocketDev/socket-registry.git"
  },
  "author": {
    "name": "Socket Inc",
    "email": "eng@socket.dev",
    "url": "https://socket.dev"
  },
  "scripts": {
    "check": "run-p -c --aggregate-output check:*",
    "check:lint": "eslint --report-unused-disable-directives .",
    "check:registry-package-types": "dotenvx -q run -f .env.local -- node ./scripts/check-registry-package-types.mjs",
    "check:tsc": "tsc --noEmit",
    "check-ci": "pnpm run check:lint",
    "clean": "run-s -c clean:*",
    "clean:cache": "del-cli '**/.cache'",
    "clean:coverage": "del-cli 'coverage'",
    "clean:registry": "dotenvx -q run -f .env.local -- pnpm --filter registry run clean",
    "clean:test": "del-cli 'test/**/.tmp-*' 'test/**/packages'",
    "clean:node_modules": "del-cli '**/node_modules'",
    "coverage": "run-s coverage:*",
    "coverage:test": "dotenvx -q run -f .env.local -- node ./scripts/test-npm-packages.mjs --force && pnpm run test:unit:coverage",
    "coverage:percent": "node scripts/get-coverage-percentage.mjs",
    "coverage:type": "dotenvx -q run -f .env.local -- type-coverage",
    "coverage:type:verbose": "dotenvx -q run -f .env.local -- type-coverage --detail",
    "build": "run-p -c --aggregate-output build:*",
    "build:registry": "dotenvx -q run -f .env.local -- pnpm --filter registry run build",
    "fix": "pnpm run lint:fix",
    "generate:actions-allow-list": "node ./scripts/generate-actions-allow-list.mjs",
    "generate:actions-tree": "node ./scripts/show-actions-tree.mjs",
    "knip:dependencies": "knip --dependencies",
    "knip:exports": "knip --include exports,duplicates",
    "lint": "dotenvx -q run -f .env.local -- oxlint -c=.oxlintrc.json --ignore-path=.oxlintignore --tsconfig=tsconfig.json .",
    "lint:fix": "run-s -c lint:fix:*",
    "lint:fix:oxlint": "dotenvx -q run -f .env.local -- oxlint -c=.oxlintrc.json --ignore-path=.oxlintignore --tsconfig=tsconfig.json --quiet --fix .",
    "lint:fix:biome": "dotenvx -q run -f .env.local -- biome format --fix .",
    "lint:fix:eslint": "dotenvx -q run -f .env.local -- eslint --report-unused-disable-directives --fix .",
    "lint-staged": "dotenvx -q run -f .env.local -- lint-staged",
    "make:npm-override": "dotenvx -q run -f .env.local -- node ./scripts/make-npm-override.mjs",
    "perf": "dotenvx -q run -f .env.local -- node ./scripts/perf.mjs",
    "precommit": "lint-staged",
    "prepare": "dotenvx -q run -f .env.local -- husky && pnpm run setup",
    "test": "run-s check test:*",
    "test:npm:packages": "dotenvx -q run -f .env.local -- node ./scripts/test-npm-packages.mjs",
    "test:unit": "dotenvx -q run -f .env.local -- node ./scripts/test.mjs",
    "test:unit:coverage": "dotenvx -q run -f .env.local -- vitest run --coverage --config vitest.config.coverage.ts",
    "test-ci": "run-s test:unit test:npm:packages",
    "test-pre-commit": "dotenvx -q run -f .env.precommit -- pnpm test",
    "package:npm:access": "dotenvx -q run -f .env.local -- node ./scripts/update-npm-package-access.mjs",
    "package:npm:publish": "dotenvx -q run -f .env.local -- node ./scripts/update-npm-package-publish.mjs",
    "release:npm": "dotenvx -q run -f .env.local -- node ./scripts/release-npm-packages.mjs",
    "setup": "pnpm run build",
    "update": "run-p --aggregate-output update:* update:npm:*",
    "update:deps": "node scripts/taze.mjs",
    "update:empty-dirs": "dotenvx -q run -f .env.local -- node ./scripts/update-empty-dirs.mjs",
    "update:empty-files": "dotenvx -q run -f .env.local -- node ./scripts/update-empty-files.mjs",
    "update:licenses": "dotenvx -q run -f .env.local -- node ./scripts/update-licenses.mjs",
    "update:manifest": "dotenvx -q run -f .env.local -- node ./scripts/update-manifest.mjs",
    "update:package-json": "dotenvx -q run -f .env.local -- node ./scripts/update-package-json.mjs",
    "update:caniuse-lite": "dotenvx -q run -f .env.local -- node ./scripts/update-caniuse-lite.mjs",
    "update:registry-package-json": "dotenvx -q run -f .env.local -- node ./scripts/update-registry-package-json.mjs",
    "update:npm:package-json": "dotenvx -q run -f .env.local -- node ./scripts/update-npm-package-json.mjs",
    "update:npm:readmes": "dotenvx -q run -f .env.local -- node ./scripts/update-npm-readmes.mjs",
    "update:socket": "pnpm update '@socketsecurity/*' '@socketregistry/*' --latest"
  },
  "devDependencies": {
    "@biomejs/biome": "2.2.4",
    "@biomejs/js-api": "3.0.0",
    "@biomejs/wasm-nodejs": "2.2.4",
    "@dotenvx/dotenvx": "1.49.0",
    "@eslint/compat": "1.3.2",
    "@eslint/js": "9.35.0",
    "@mdn/browser-compat-data": "7.1.5",
    "@npmcli/package-json": "7.0.0",
    "@socketregistry/packageurl-js": "1.1.0",
    "@socketregistry/scripts": "file:scripts",
    "@socketsecurity/registry": "workspace:*",
    "@types/fs-extra": "11.0.4",
    "@types/node": "24.3.3",
    "@types/npmcli__package-json": "4.0.4",
    "@types/npmcli__promise-spawn": "6.0.3",
    "@types/semver": "7.7.1",
    "@types/validate-npm-package-name": "4.0.2",
    "@types/which": "3.0.4",
    "@vitest/coverage-v8": "3.2.4",
    "@vitest/ui": "3.2.4",
    "@zkochan/js-yaml": "0.0.10",
    "clipboardy": "4.0.0",
    "del-cli": "6.0.0",
    "didyoumean2": "7.0.4",
    "eslint": "9.35.0",
    "eslint-import-resolver-typescript": "4.4.4",
    "eslint-plugin-import-x": "4.16.1",
    "eslint-plugin-n": "17.22.0",
    "eslint-plugin-sort-destructure-keys": "2.0.0",
    "eslint-plugin-unicorn": "56.0.1",
    "eta": "3.5.0",
    "fast-glob": "3.3.3",
    "fs-extra": "11.3.1",
    "globals": "16.4.0",
    "husky": "9.1.7",
    "knip": "5.63.1",
    "lint-staged": "16.1.6",
    "minimatch": "9.0.5",
    "npm-package-arg": "13.0.0",
    "npm-run-all2": "8.0.4",
    "out-url": "1.2.2",
    "oxlint": "1.15.0",
    "read-yaml-file": "2.1.0",
    "semver": "7.7.2",
    "taze": "19.6.0",
    "trash": "7.2.0",
    "tsx": "4.20.5",
    "type-coverage": "2.29.7",
    "typescript": "5.9.2",
    "typescript-eslint": "8.44.1",
    "update-browserslist-db": "1.1.3",
    "vitest": "3.2.4",
    "which": "5.0.0",
    "yargs-parser": "21.1.1",
    "yoctocolors-cjs": "2.1.3"
  },
  "engines": {
    "node": ">=18",
    "pnpm": ">=10.16.0"
  },
  "lint-staged": {
    "*.{cjs,cts,js,json,md,mjs,mts,ts}": [
      "pnpm run lint:fix:oxlint",
      "pnpm run lint:fix:biome -- --no-errors-on-unmatched --files-ignore-unknown=true --colors=off"
    ]
  },
  "pnpm": {
    "overrides": {
      "aggregate-error": "npm:@socketregistry/aggregate-error@^1.0.14",
      "array-buffer-byte-length": "npm:@socketregistry/array-buffer-byte-length@^1.0.7",
      "available-typed-arrays": "npm:@socketregistry/available-typed-arrays@^1.0.7",
      "brace-expansion": "2.0.2",
      "es-define-property": "npm:@socketregistry/es-define-property@^1.0.7",
      "es-get-iterator": "npm:@socketregistry/es-get-iterator@^1.0.8",
      "es-set-tostringtag": "npm:@socketregistry/es-set-tostringtag@^1.0.9",
      "for-each": "npm:@socketregistry/for-each@^1.0.7",
      "function-bind": "npm:@socketregistry/function-bind@^1.0.7",
      "gopd": "npm:@socketregistry/gopd@^1.0.7",
      "has-property-descriptors": "npm:@socketregistry/has-property-descriptors@^1.0.7",
      "has-symbols": "npm:@socketregistry/has-symbols@^1.0.7",
      "has-tostringtag": "npm:@socketregistry/has-tostringtag@^1.0.7",
      "hasown": "npm:@socketregistry/hasown@^1.0.7",
      "iconv-lite": "0.6.3",
      "indent-string": "npm:@socketregistry/indent-string@^1.0.13",
      "is-arguments": "npm:@socketregistry/is-arguments@^1.0.9",
      "is-array-buffer": "npm:@socketregistry/is-array-buffer@^1.0.9",
      "is-core-module": "npm:@socketregistry/is-core-module@^1.0.10",
      "is-date-object": "npm:@socketregistry/is-date-object@^1.0.9",
      "is-generator-function": "npm:@socketregistry/is-generator-function@^1.0.9",
      "is-nan": "npm:@socketregistry/is-nan@^1.0.7",
      "is-regex": "npm:@socketregistry/is-regex@^1.0.9",
      "is-shared-array-buffer": "npm:@socketregistry/is-shared-array-buffer@^1.0.9",
      "is-typed-array": "npm:@socketregistry/is-typed-array@^1.0.11",
      "isarray": "npm:@socketregistry/isarray@^1.0.7",
      "json-stable-stringify": "npm:@socketregistry/json-stable-stringify@^1.0.12",
      "jsonify": "npm:@socketregistry/jsonify@^1.0.7",
      "minimatch": "9.0.5",
      "object-is": "npm:@socketregistry/object-is@^1.0.7",
      "object-keys": "npm:@socketregistry/object-keys@^1.0.7",
      "object.assign": "npm:@socketregistry/object.assign@^1.0.7",
      "path-parse": "npm:@socketregistry/path-parse@^1.0.7",
      "regexp.prototype.flags": "npm:@socketregistry/regexp.prototype.flags@^1.0.7",
      "safe-regex-test": "npm:@socketregistry/safe-regex-test@^1.0.7",
      "safer-buffer": "npm:@socketregistry/safer-buffer@^1.0.9",
      "set-function-length": "npm:@socketregistry/set-function-length@^1.0.9",
      "shell-quote": "npm:shell-quote@^1.8.3",
      "side-channel": "npm:@socketregistry/side-channel@^1.0.9",
      "which-boxed-primitive": "npm:@socketregistry/which-boxed-primitive@^1.0.8",
      "which-collection": "npm:@socketregistry/which-collection@^1.0.7",
      "which-typed-array": "npm:@socketregistry/which-typed-array@^1.0.8"
    },
    "patchedDependencies": {
      "brace-expansion@2.0.2": "patches/brace-expansion@2.0.2.patch",
      "iconv-lite@0.6.3": "patches/iconv-lite@0.6.3.patch",
      "minimatch@9.0.5": "patches/minimatch@9.0.5.patch"
    },
    "peerDependencyRules": {
      "ignoreMissing": [
        "@yarnpkg/core"
      ]
    }
  }
}
