import path from 'node:path'

import { defineConfig } from 'vitest/config'

export default defineConfig({
  test: {
    globals: false,
    environment: 'node',
    include: [
      'test/registry/debug.test.ts',
      'test/registry/strings.test.ts',
      'test/registry/objects.test.ts',
      'test/registry/constants.test.ts',
      'test/registry/arrays.test.ts',
      'test/registry/env.test.ts',
      'test/registry/json.test.ts',
      'test/registry/sorts.test.ts',
      'test/registry/url.test.ts',
      'test/registry/path.test.ts',
      'test/registry/words.test.ts',
      'test/registry/regexps.test.ts',
      'test/registry/functions.test.ts',
      'test/registry/packages.test.ts',
      'test/registry/utils.test.ts',
      'test/registry/index.test.ts',
      'test/registry/spawn.test.ts',
      'test/registry/agent.test.ts',
      'test/registry/spinner-comprehensive.test.ts',
      'test/registry/logger-comprehensive.test.ts',
      'test/registry/objects-comprehensive.test.ts',
      'test/registry/packages-internal.test.ts',
      'test/registry/error-paths-coverage.test.ts',
      'test/registry/final-coverage-push.test.ts',
      'test/registry/additional-coverage.test.ts',
    ],
    exclude: ['**/node_modules/**', '**/dist/**'],
    reporters: ['default'],
    coverage: {
      provider: 'v8',
      reporter: ['text', 'text-summary'],
      exclude: [
        '**/*.config.*',
        '**/dist/**',
        '**/build/**',
        '**/node_modules/**',
        '**/[.]**',
        '**/*.d.ts',
        '**/pnpmfile.*',
        '**/virtual:*',
        'coverage/**',
        'test/**',
        'scripts/**',
        'registry/external/**',
        'registry/src/external/**',
        'registry/scripts/**',
        'packages/**',
        'perf/**',
      ],
      all: true,
      thresholds: {
        lines: 90,
        functions: 85,
        branches: 90,
        statements: 90,
      },
    },
    testTimeout: 60000,
    hookTimeout: 60000,
  },
  resolve: {
    alias: {
      '@socketregistry/scripts': path.resolve(__dirname, './scripts'),
      '@socketsecurity/registry': path.resolve(__dirname, './registry'),
    },
  },
})
